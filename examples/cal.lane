enum Expr {
    lit[Int], 
    add[Expr, Expr],
    sub[Expr, Expr]
}

def eval (expr : Expr) : Int = match expr {
    lit n => n,
    add e1 e2 => eval e1 + eval e2,
    sub e1 e2 => eval e1 - eval e2
}

def main : Int = eval (sub (lit 1) (add (lit 2) (lit -3)))

